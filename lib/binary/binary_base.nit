# This file is part of NIT (http://www.nitlanguage.org).
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file is generated by the Makefile from binary_source,
# it should not be modified.

#
module binary_base

intrude import standard::file
import standard

in "C Header" `{
	#include <stdio.h>
`}

#
abstract class BinaryStream
	# Does this stream use big endian?
	var use_big_endian = true is writable
end

#
class BinaryWriter
	super BinaryStream
	super FileWriter

	#
	init open(path: String)
	do
		self.path = path.to_s
		_file = new NativeFile.io_open_write(self.path.to_cstring)
	end
end

#
class BinaryReader
	super BinaryStream
	super FileStream

	#
	init open(path: Text)
	do
		self.path = path.to_s
		_file = new NativeFile.io_open_read(self.path.to_cstring)
	end

	redef fun close
	do
		if _file == null or _file.address_is_null then return
		_file.io_close
		_file = null
	end
end

redef extern class NativeFile
	fun eof: Bool `{ return feof(recv); `}
end
